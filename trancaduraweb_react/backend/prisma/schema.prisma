generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          BigInt   @id @default(autoincrement())
  email       String   @unique
  username    String   @unique
  password    String
  isActive    Boolean  @default(true) @map("is_active")
  isStaff     Boolean  @default(false) @map("is_staff")
  isSuperuser Boolean  @default(false) @map("is_superuser")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relacionamentos
  roles       UserRole[]
  pinCodes    DevicePinCode[]
  cards       UserCard[]
  accesses    UserAccess[]

  @@map("users")
}

model Role {
  id   String @id @default(cuid())
  name String @unique

  userRoles   UserRole[]
  deviceRoles DeviceRole[]

  @@map("roles")
}

model UserRole {
  id     String  @id @default(cuid())
  userId BigInt  @map("user_id")
  roleId String  @map("role_id")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@unique([userId, roleId])
  @@map("user_roles")
}

model Device {
  id         String   @id @default(cuid())
  uuid       String   @unique
  macAddress String?  @unique @map("mac_address")
  section    String?
  location   String?
  ipAddress  String?  @map("ip_address")
  apiToken   String?  @unique @map("api_token")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  roles         DeviceRole[]
  pinCodes      DevicePinCode[]
  accesses      UserAccess[]
  buttonDevices ButtonDevice[]

  @@map("devices")
}

model DeviceRole {
  id       String @id @default(cuid())
  deviceId String @map("device_id")
  roleId   String @map("role_id")

  device Device @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@unique([deviceId, roleId])
  @@map("device_roles")
}

model DevicePinCode {
  id        String   @id @default(cuid())
  deviceId  String   @map("device_id")
  userId    BigInt   @map("user_id")
  pin       Int
  dateInit  DateTime? @map("date_init")
  dateStop  DateTime? @map("date_stop")
  createdAt DateTime @default(now()) @map("created_at")

  device Device @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("device_pin_codes")
}

model Approximation {
  id         String   @id @default(cuid())
  cardId     String   @unique @map("card_id")
  name       String?  @default("empty")
  permission Boolean  @default(false)
  createdAt  DateTime @default(now()) @map("created_at")

  userCards UserCard[]

  @@map("approximations")
}

model UserCard {
  id              String  @id @default(cuid())
  userId          BigInt  @map("user_id")
  approximationId String  @map("approximation_id")

  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  approximation Approximation @relation(fields: [approximationId], references: [id], onDelete: Cascade)

  @@unique([userId, approximationId])
  @@map("user_cards")
}

model UserAccess {
  id       String   @id @default(cuid())
  userId   BigInt?  @map("user_id")
  deviceId String   @map("device_id")
  date     DateTime @default(now())

  user   User?  @relation(fields: [userId], references: [id], onDelete: SetNull)
  device Device @relation(fields: [deviceId], references: [id], onDelete: Cascade)

  @@map("user_accesses")
}

model Button {
  id          String   @id @default(cuid())
  uuid        String   @unique
  macAddress  String?  @unique @map("mac_address")
  apiToken    String?  @unique @map("api_token")
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  buttonDevices ButtonDevice[]

  @@map("buttons")
}

model ButtonDevice {
  id       String @id @default(cuid())
  buttonId String @map("button_id")
  deviceId String @map("device_id")

  button Button @relation(fields: [buttonId], references: [id], onDelete: Cascade)
  device Device @relation(fields: [deviceId], references: [id], onDelete: Cascade)

  @@unique([buttonId, deviceId])
  @@map("button_devices")
}
